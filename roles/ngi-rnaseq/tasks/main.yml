---
##IMPORTANT: NextFlow installation will be handled by module system.
#Since nextflow creates a classpath file on virtually every runtime, and we lack a writeable directory 
#that can be distinguished from irma3; installation is impossible.

- name: Create NextFlow directory
  file: path="{{ nextflow_dest }}" state=directory mode=g+rwXs

- name: Override where NextFlow dependencies are placed
  shell: "export { item }={{ nextflow_dest }}"
  with_items:
  - { "NXF_HOME" }
  - { "NXF_LAUNCHER" } 

- name: Install NextFlow
  shell: "./nextflow"
  environment:
    NXF_HOME: "{{ nextflow_dest }}"
  args:
    chdir: "{{ nextflow_dest }}"

- name: Add NextFlow to $PATH
  lineinfile: dest="{{ ngi_pipeline_conf }}/{{ bash_env_script }}"
              line="export PATH={{ root_path }}/sw/nextflow:$PATH"
              backup=no

- name: Point NextFlow dependencies vars to installation directory
  lineinfile: dest="{{ ngi_pipeline_conf }}/{{ bash_env_script }}"
              line="export { item }={{ nextflow_dest }}"
              backup=no
  with_items:
  - { "NXF_HOME" }
  - { "NXF_LAUNCHER" }

- name: Fetch NGI-RNAseq from GitHub
  git: repo="{{ ngi_rnaseq_repo }}"
       dest="{{ ngi_rnaseq_dest }}"
       version="{{ ngi_rnaseq_version }}"
       force=yes

- name: Copy NGI-RNAseq config
  template: src="ngi-rnaseq.config.j2" dest="{{ ngi_pipeline_conf }}/ngi-rnaseq_{{ item.site }}.config"
  with_items:
  - { site: "sthlm", proj: "{{ ngi_pipeline_sthlm_delivery }}" }
  - { site: "upps", proj: "{{ ngi_pipeline_upps_delivery }}" }

- name: Set alias
  lineinfile: dest="{{ ngi_pipeline_conf }}/{{ item.script }}"
              line="alias rnaseq='nextflow {{ ngi_rnaseq_dest }}/main.nf -c {{ ngi_pipeline_conf }}/ngi-rnaseq_{{ item.site }}.config'"
              backup=no
  with_items:
  - { site: "sthlm", script: "{{ bash_env_sthlm_script }}" }
  - { site: "upps", script: "{{ bash_env_upps_script }}" }
